 <!DOCTYPE html>
 <html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=no">
		<title>XYZ Maps Example: Style POI</title>

	   	<script src="${XYZ_COMMON_PATH}" type="text/javascript" charset="UTF-8" ></script>
	    <script src="${XYZ_CORE_PATH}" type="text/javascript" charset="UTF-8" ></script>
	    <script src="${XYZ_DISPLAY_PATH}" type="text/javascript" charset="UTF-8" ></script>
	    <script src="${XYZ_EDITOR_PATH}" type="text/javascript" charset="UTF-8" ></script>


 		<style type="text/css">
			#map {
				position: absolute;
            	overflow: hidden;
				top: 0;
				left: 0;
				width: 100%;
                height: 100%;
			}
 		</style>
	</head>
	<body>
	<div id="map"></div>

	<a id="createbuttongeo" class="button">Create - geo</a>
	<a id="createbuttonpixel" class="button">Create - pixel</a>

	<script type="application/javascript">
		// specify credentials
      	var YOUR_ACCESS_TOKEN = window.parent.YOUR_ACCESS_TOKEN;

		// Define customized Provider that extends from SpaceProvider
		class MyProvider extends here.xyz.maps.providers.SpaceProvider {

			// Detect feature class by geometry type
			detectFeatureClass(feature) {
				if(feature.geometry.type == 'LineString'){
					return 'NAVLINK';
				}
				else {
					return 'PLACE';
				}
			}

			// Get routing point of the feature
			readRoutingPosition(feature) {
				return feature.prop('rp');
			}

			// Get id of the link to which the feature connects
			readRoutingLink(feature) {
				return feature.prop('link');
			}

			// Update routing point of the feature
			writeRoutingPosition(feature, position) {
				feature.prop('rp', position);
			}

			// Update id of the link to which the feature connects
			writeRoutingLink(feature, link) {
				feature.prop('link', link ? link.id : link);
			}

			// There is no turn restriction from link A to B
			readTurnRestriction(A, B) {
				return false;
			};

			// Do nothing for editing turn restriction
			writeTurnRestriction(restricted, A, B) {
			}

			// The feature is not pedestrian only
			readPedestrianOnly(feature) {
				return false
			}

			// The feature is two-way street, valid value: 'BOTH' | 'START_TO_END' | 'END_TO_START'
			readDirection(feature) {
				return 'BOTH';
			}

			// Get the id of the provider which have the links to which the points connect
			readRoutingProvider(location, providers) {
				for(let p in providers) {
					if(providers[p].class == 'NAVLINK')
						return providers[p].id;
				}
			}
		}

		var bgLayer = new here.xyz.maps.layers.MVTLayer({
			name: 'background layer',
			min: 1,
			max: 20,
			remote: {
				url: 'https://xyz.api.here.com/tiles/osmbase/256/all/{z}/{x}/{y}.mvt?access_token='+YOUR_ACCESS_TOKEN
			}
		});
		var linkLayer = new here.xyz.maps.layers.TileLayer({
			name: 'Link Layer',
			min: 14,
			max: 20,
			// Customized provider to provide objects
			provider: new MyProvider({
				name: "Objects",
				space: "playground-link",
				credentials: {
					access_token: YOUR_ACCESS_TOKEN
				},
				level: 14,
				class: "NAVLINK"
			})
		});
		var placeLayer = new here.xyz.maps.layers.TileLayer({
			name: 'POI Layer',
			min: 14,
			max: 20,
			// Customized provider to provide objects
			provider: new MyProvider({
				name: "POIs",
				space: "playground-place",
				credentials: {
					access_token: YOUR_ACCESS_TOKEN
				},
				level: 14
			}),
		});

        // setup the Map Display
		window.display = new  here.xyz.maps.Map( document.getElementById("map"), {
                zoomLevel : 17,
                center: {
                    latitude:50.791735, longitude:6.128469
                },

                // add layers to display
                layers: [bgLayer, linkLayer, placeLayer]
            });

		// setup the editEngine
        var editor = new here.xyz.maps.editor.Editor( display );

		// link and poi layers to editor, make layers editable
		editor.addLayer( linkLayer );
		editor.addLayer( placeLayer );

/*###visiblesource*/
/**
 * This example shows how to create POIs.
 */
var createbuttonpixel = document.querySelector("#createbuttonpixel");
var createbuttongeo = document.querySelector("#createbuttongeo");

// add onclick handler to createbutton
createbuttonpixel.onclick = function(){
	// create POI
	var poi = new here.xyz.maps.editor.features.Place(new here.xyz.maps.editor.PixelCoordinate(200, 300), { type : 5800 });

	// add poi to editor
	editor.addFeature( poi );
}

// onclick handler to createbutton
createbuttongeo.onclick = function(){
	// create POI
	var poi = new here.xyz.maps.editor.features.Place(new here.xyz.maps.editor.GeoCoordinate(6.128469, 50.791735), { type : 7510 });

	// add poi to editor
	editor.addFeature( poi );
}

/*visiblesource###*/
		</script>
	</body>
</html>
